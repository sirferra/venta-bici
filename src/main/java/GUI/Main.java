/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import GUI.vendedor.ModificarVendedor;
import java.util.List;
import javax.swing.table.DefaultTableModel;

import GUI.cliente.AgregarCliente;
import GUI.cliente.ModificarCliente;
import GUI.producto.AgregarProducto;
import GUI.producto.ModificarProducto;
import GUI.proveedor.CrearProveedor;
import GUI.proveedor.ModificarProveedor;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;

import persona.Cliente;
import persona.Vendedor;
import GUI.vendedor.AgregarVendedor;
import GUI.ventas.CrearVenta;
import pedido.Pedido;
import persona.Proveedor;
import producto.Producto;
import venta.Venta;

/**
 *
 * @author facundo.cuffia
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        
    }

    //Metodo de rellenar tabla (insertar una vez listo el programa)
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlPantalla = new javax.swing.JTabbedPane();
        pnlCliente = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dgvClientes = new javax.swing.JTable();
        btnNuevoCliente = new javax.swing.JButton();
        btnModificarCliente = new javax.swing.JButton();
        btnEliminarCliente = new javax.swing.JButton();
        txtNombreCli = new javax.swing.JTextField();
        txtApellidoCli = new javax.swing.JTextField();
        txtDniCli = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnBuscarCliente = new javax.swing.JButton();
        pnlVendedores = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        dgvVendedores = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtNombreVen = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtApellidoVen = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtDniVen = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnEliminarVendedor = new javax.swing.JButton();
        btnModificarVendedor = new javax.swing.JButton();
        btnNuevoVendedor = new javax.swing.JButton();
        btnBuscarVendedor = new javax.swing.JButton();
        pnlProveedores = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        dgvProveedores = new javax.swing.JTable();
        btnEliminarProveedor = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        btnModificarProveedor = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtNombreProv = new javax.swing.JTextField();
        btnNuevoProveedor = new javax.swing.JButton();
        txtDniProv = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtApellidoProv = new javax.swing.JTextField();
        btnBuscarProveedor = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        pnlProducto = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        txtCategoria = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtModelo = new javax.swing.JTextField();
        btnBuscarProducto = new javax.swing.JButton();
        btnEliminarProducto = new javax.swing.JButton();
        btnModificarProducto = new javax.swing.JButton();
        btnNuevoProducto = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        dgvProductos = new javax.swing.JTable();
        pnlVentas = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtNombreVend = new javax.swing.JTextField();
        txtApellidoVend = new javax.swing.JTextField();
        txtNombreClient = new javax.swing.JTextField();
        txtApellidoClient = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        dgvVentas = new javax.swing.JTable();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        txtFechaHasta = new javax.swing.JTextField();
        txtFechaDesde = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        dgvDetalle = new javax.swing.JTable();
        btnGenerarVenta = new javax.swing.JButton();
        btnBuscarVentas = new javax.swing.JButton();
        txtMasVendido = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        pnlCliente.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                pnlClienteComponentShown(evt);
            }
        });

        dgvClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "CUIL", "NOMBRE", "APELLIDO", "DNI", "TELEFONO", "EMAIL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dgvClientes.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(dgvClientes);
        if (dgvClientes.getColumnModel().getColumnCount() > 0) {
            dgvClientes.getColumnModel().getColumn(0).setResizable(false);
            dgvClientes.getColumnModel().getColumn(1).setResizable(false);
            dgvClientes.getColumnModel().getColumn(2).setResizable(false);
        }

        btnNuevoCliente.setText("Nuevo Cliente");
        btnNuevoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoClienteActionPerformed(evt);
            }
        });

        btnModificarCliente.setText("Modificar Cliente");
        btnModificarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarClienteActionPerformed(evt);
            }
        });

        btnEliminarCliente.setText("Eliminar Cliente");
        btnEliminarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarClienteActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre:");

        jLabel2.setText("Apellido:");

        jLabel3.setText("DNI:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("FILTROS");

        btnBuscarCliente.setText("Buscar Clientes");
        btnBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlClienteLayout = new javax.swing.GroupLayout(pnlCliente);
        pnlCliente.setLayout(pnlClienteLayout);
        pnlClienteLayout.setHorizontalGroup(
            pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClienteLayout.createSequentialGroup()
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlClienteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(pnlClienteLayout.createSequentialGroup()
                        .addGap(0, 30, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 277, Short.MAX_VALUE)
                        .addComponent(btnEliminarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNuevoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlClienteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlClienteLayout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtDniCli, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlClienteLayout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtApellidoCli, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnlClienteLayout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtNombreCli, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlClienteLayout.setVerticalGroup(
            pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClienteLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModificarCliente)
                    .addComponent(btnNuevoCliente)
                    .addComponent(btnEliminarCliente)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombreCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtApellidoCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(12, 12, 12)
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDniCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBuscarCliente)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        pnlPantalla.addTab("Clientes", pnlCliente);

        pnlVendedores.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                pnlVendedoresComponentShown(evt);
            }
        });

        dgvVendedores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "CUIT", "NOMBRE", "APELLIDO", "DNI", "TELEFONO", "EMAIL", "SUCURSAL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dgvVendedores.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(dgvVendedores);
        if (dgvVendedores.getColumnModel().getColumnCount() > 0) {
            dgvVendedores.getColumnModel().getColumn(1).setResizable(false);
            dgvVendedores.getColumnModel().getColumn(2).setResizable(false);
            dgvVendedores.getColumnModel().getColumn(6).setResizable(false);
        }

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("FILTROS");

        jLabel6.setText("Nombre:");

        jLabel7.setText("Apellido:");

        jLabel8.setText("DNI:");

        btnEliminarVendedor.setText("Eliminar Vendedor");
        btnEliminarVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarVendedorActionPerformed(evt);
            }
        });

        btnModificarVendedor.setText("Modificar Vendedor");
        btnModificarVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarVendedorActionPerformed(evt);
            }
        });

        btnNuevoVendedor.setText("Nuevo Vendedor");
        btnNuevoVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoVendedorActionPerformed(evt);
            }
        });

        btnBuscarVendedor.setText("Buscar Vendedores");
        btnBuscarVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarVendedorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlVendedoresLayout = new javax.swing.GroupLayout(pnlVendedores);
        pnlVendedores.setLayout(pnlVendedoresLayout);
        pnlVendedoresLayout.setHorizontalGroup(
            pnlVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVendedoresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 757, Short.MAX_VALUE)
                    .addGroup(pnlVendedoresLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminarVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificarVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNuevoVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlVendedoresLayout.createSequentialGroup()
                        .addGroup(pnlVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(pnlVendedoresLayout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtDniVen, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnlVendedoresLayout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtApellidoVen, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnlVendedoresLayout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtNombreVen, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnBuscarVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlVendedoresLayout.setVerticalGroup(
            pnlVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVendedoresLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(btnModificarVendedor)
                    .addComponent(btnNuevoVendedor)
                    .addComponent(btnEliminarVendedor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombreVen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtApellidoVen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDniVen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBuscarVendedor)
                .addGap(0, 77, Short.MAX_VALUE))
        );

        pnlPantalla.addTab("Vendedores", pnlVendedores);

        pnlProveedores.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                pnlProveedoresComponentShown(evt);
            }
        });

        dgvProveedores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "CUIT", "N. FANTASIA", "NOMBRE", "APELLIDO", "DNI", "TELEFONO", "EMAIL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dgvProveedores.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(dgvProveedores);
        if (dgvProveedores.getColumnModel().getColumnCount() > 0) {
            dgvProveedores.getColumnModel().getColumn(2).setResizable(false);
            dgvProveedores.getColumnModel().getColumn(3).setResizable(false);
            dgvProveedores.getColumnModel().getColumn(5).setHeaderValue("TELEFONO");
            dgvProveedores.getColumnModel().getColumn(6).setHeaderValue("EMAIL");
        }

        btnEliminarProveedor.setText("Eliminar Proveedor");
        btnEliminarProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarProveedorActionPerformed(evt);
            }
        });

        jLabel9.setText("DNI:");

        btnModificarProveedor.setText("Modificar Proveedor");
        btnModificarProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarProveedorActionPerformed(evt);
            }
        });

        jLabel10.setText("Nombre:");

        btnNuevoProveedor.setText("Nuevo Proveedor");
        btnNuevoProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoProveedorActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("FILTROS");

        btnBuscarProveedor.setText("Buscar Proveedor");
        btnBuscarProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProveedorActionPerformed(evt);
            }
        });

        jLabel12.setText("Apellido:");

        javax.swing.GroupLayout pnlProveedoresLayout = new javax.swing.GroupLayout(pnlProveedores);
        pnlProveedores.setLayout(pnlProveedoresLayout);
        pnlProveedoresLayout.setHorizontalGroup(
            pnlProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProveedoresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 757, Short.MAX_VALUE)
                    .addGroup(pnlProveedoresLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminarProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificarProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNuevoProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlProveedoresLayout.createSequentialGroup()
                        .addGroup(pnlProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(pnlProveedoresLayout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtDniProv, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnlProveedoresLayout.createSequentialGroup()
                                    .addComponent(jLabel12)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtApellidoProv, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnlProveedoresLayout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtNombreProv, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnBuscarProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlProveedoresLayout.setVerticalGroup(
            pnlProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProveedoresLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(btnModificarProveedor)
                    .addComponent(btnNuevoProveedor)
                    .addComponent(btnEliminarProveedor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombreProv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtApellidoProv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDniProv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBuscarProveedor)
                .addGap(0, 77, Short.MAX_VALUE))
        );

        pnlPantalla.addTab("Proveedores", pnlProveedores);

        pnlProducto.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                pnlProductoComponentShown(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setText("FILTROS");

        jLabel14.setText("Código:");

        jLabel15.setText("Categoria");

        jLabel16.setText("Modelo:");

        btnBuscarProducto.setText("Buscar Producto");
        btnBuscarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProductoActionPerformed(evt);
            }
        });

        btnEliminarProducto.setText("Eliminar Producto");
        btnEliminarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarProductoActionPerformed(evt);
            }
        });

        btnModificarProducto.setText("Modificar Producto");
        btnModificarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarProductoActionPerformed(evt);
            }
        });

        btnNuevoProducto.setText("Nuevo Producto");
        btnNuevoProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoProductoActionPerformed(evt);
            }
        });

        dgvProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "CÓDIGO", "NOMBRE", "PROVEEDOR", "CATEGORIA", "MODELO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dgvProductos.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(dgvProductos);
        if (dgvProductos.getColumnModel().getColumnCount() > 0) {
            dgvProductos.getColumnModel().getColumn(2).setResizable(false);
            dgvProductos.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout pnlProductoLayout = new javax.swing.GroupLayout(pnlProducto);
        pnlProducto.setLayout(pnlProductoLayout);
        pnlProductoLayout.setHorizontalGroup(
            pnlProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 757, Short.MAX_VALUE)
                    .addGroup(pnlProductoLayout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNuevoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlProductoLayout.createSequentialGroup()
                        .addGroup(pnlProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBuscarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlProductoLayout.createSequentialGroup()
                                .addGroup(pnlProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel14))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 570, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlProductoLayout.setVerticalGroup(
            pnlProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProductoLayout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(btnModificarProducto)
                    .addComponent(btnNuevoProducto)
                    .addComponent(btnEliminarProducto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBuscarProducto)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        pnlPantalla.addTab("Productos", pnlProducto);

        pnlVentas.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                pnlVentasComponentShown(evt);
            }
        });

        jLabel17.setText("Apellido");

        jLabel18.setText("Nombre:");

        jLabel19.setText("Nombre:");

        jLabel20.setText("Apellido");

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel21.setText("Cliente");

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel22.setText("Proveedor");

        dgvVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "FECHA", "VENDEDOR", "CLIENTE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dgvVentas.getTableHeader().setReorderingAllowed(false);
        dgvVentas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dgvVentasMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(dgvVentas);
        if (dgvVentas.getColumnModel().getColumnCount() > 0) {
            dgvVentas.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel23.setText("Fecha desde:");

        jLabel24.setText("Fecha hasta:");

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel25.setText("Fecha");

        jLabel26.setText("Producto más vendido:");

        dgvDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "PRODUCTO", "CANTIDAD", "PRECIO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dgvDetalle.getTableHeader().setReorderingAllowed(false);
        jScrollPane6.setViewportView(dgvDetalle);

        btnGenerarVenta.setText("Generar Venta");
        btnGenerarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarVentaActionPerformed(evt);
            }
        });

        btnBuscarVentas.setText("Buscar");

        jLabel27.setText("TOTAL:");

        javax.swing.GroupLayout pnlVentasLayout = new javax.swing.GroupLayout(pnlVentas);
        pnlVentas.setLayout(pnlVentasLayout);
        pnlVentasLayout.setHorizontalGroup(
            pnlVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVentasLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(pnlVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlVentasLayout.createSequentialGroup()
                            .addGroup(pnlVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(pnlVentasLayout.createSequentialGroup()
                                    .addComponent(jLabel17)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtApellidoVend, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnlVentasLayout.createSequentialGroup()
                                    .addComponent(jLabel18)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(pnlVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel22)
                                        .addComponent(txtNombreVend, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGap(47, 47, 47)
                            .addGroup(pnlVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(pnlVentasLayout.createSequentialGroup()
                                    .addComponent(jLabel20)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtApellidoClient))
                                .addGroup(pnlVentasLayout.createSequentialGroup()
                                    .addComponent(jLabel19)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(pnlVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel21)
                                        .addComponent(txtNombreClient, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGap(80, 80, 80)
                            .addGroup(pnlVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(pnlVentasLayout.createSequentialGroup()
                                    .addComponent(jLabel24)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtFechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnlVentasLayout.createSequentialGroup()
                                    .addComponent(jLabel23)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(pnlVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel25)
                                        .addComponent(txtFechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(pnlVentasLayout.createSequentialGroup()
                            .addGroup(pnlVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel26)
                                .addComponent(jLabel27))
                            .addGap(18, 18, 18)
                            .addGroup(pnlVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtMasVendido, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                                .addComponent(txtTotal))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnGenerarVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnBuscarVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        pnlVentasLayout.setVerticalGroup(
            pnlVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVentasLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(pnlVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlVentasLayout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addGap(18, 18, 18)
                        .addGroup(pnlVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23))
                        .addGap(18, 18, 18)
                        .addGroup(pnlVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24)
                            .addComponent(txtFechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlVentasLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(18, 18, 18)
                        .addGroup(pnlVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(txtNombreClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(txtApellidoClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlVentasLayout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addGap(18, 18, 18)
                        .addGroup(pnlVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(txtNombreVend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(txtApellidoVend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarVentas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGenerarVenta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel26)
                    .addComponent(txtMasVendido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27))
                .addGap(14, 14, 14))
        );

        pnlPantalla.addTab("Ventas", pnlVentas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlPantalla)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlPantalla, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /************
    ***LISTADOS**
    ************/
    public void listarTodosClientes(){
        persona.Cliente cliente = new Cliente();
        //Creo una lista de objetos cliente y guardo en ella lo retornado por getAll()
        List<Cliente> registros = cliente.getAll();
        // Verifica que la lista no esté vacía o nula
        if (registros == null || registros.isEmpty()) {
        System.out.println("Advertencia: No hay registros existentes en la base de datos.");
        return;
        }
        //Obtener el modelo de la tabla para poder modificarlo
        DefaultTableModel modelo = (DefaultTableModel) dgvClientes.getModel();
        //Limpiar registros anteriores
        modelo.setRowCount(0);
        for (Cliente registro : registros) {
           //Creo una fila extrayendo los campos del objeto cliente almacenado en la lista de registros.
           modelo.addRow(new Object[]{
            registro.getCuil(),
            registro.getNombre(),
            registro.getApellido(),
            registro.getDni(),
            registro.getTelefono(),
            registro.getEmail()
        }); 
        }
    }
    public void listarFiltrosClientes(){
         //Guardo los valores de los campos de texto para filtrar
        String dni = txtDniCli.getText();
        String nombre = txtNombreCli.getText();
        String apellido = txtApellidoCli.getText();
        persona.Cliente cliente = new Cliente();
        //Creo una lista de objetos cliente y guardo en ella lo retornado por getAll()
        List<Cliente> registros = cliente.buscarPorFiltros(dni, nombre, apellido);
        // Verifica que la lista no esté vacía o nula
        if (registros == null || registros.isEmpty()) {
        System.out.println("Advertencia: No hay registros existentes en la base de datos que coincidan con los filtros.");
        return;
        }
        //Obtener el modelo de la tabla para poder modificarlo
        DefaultTableModel modelo = (DefaultTableModel) dgvClientes.getModel();
        //Limpiar registros anteriores
        modelo.setRowCount(0);
        for (Cliente registro : registros) {
           //Creo una fila extrayendo los campos del objeto cliente almacenado en la lista de registros.
           modelo.addRow(new Object[]{
            registro.getCuil(),
            registro.getNombre(),
            registro.getApellido(),
            registro.getDni(),
            registro.getTelefono(),
            registro.getEmail()
        }); 
        }
    }
    public void listarTodosVendedores(){
        Vendedor vendedor = new Vendedor();
        //Creo una lista de objetos cliente y guardo en ella lo retornado por getAll()
        List<Vendedor> registros = vendedor.getAll();
        // Verifica que la lista no esté vacía o nula
        if (registros == null || registros.isEmpty()) {
        System.out.println("Advertencia: No hay registros existentes en la base de datos.");
        return;
        }
        //Obtener el modelo de la tabla para poder modificarlo
        DefaultTableModel modelo = (DefaultTableModel) dgvVendedores.getModel();
        //Limpiar registros anteriores
        modelo.setRowCount(0);
        for (Vendedor registro : registros) {
           //Creo una fila extrayendo los campos del objeto cliente almacenado en la lista de registros.
           modelo.addRow(new Object[]{
            registro.getCuit(),
            registro.getNombre(),
            registro.getApellido(),
            registro.getDni(),
            registro.getTelefono(),
            registro.getEmail(),
            registro.getSucursal()
        }); 
    }}
    public void listarFiltrosVendedores(){
        //Guardo los valores de los campos de texto para filtrar
        String dni = txtDniVen.getText();
        String nombre = txtNombreVen.getText();
        String apellido = txtApellidoVen.getText();
        Vendedor vendedor = new Vendedor();
        //Creo una lista de objetos cliente y guardo en ella lo retornado por getAll()
        List<Vendedor> registros = Vendedor.buscarPorFiltros(dni, nombre, apellido);
        // Verifica que la lista no esté vacía o nula
        if (registros == null || registros.isEmpty()) {
        System.out.println("Advertencia: No hay registros existentes en la base de datos que coincidan con los filtros.");
        return;
        }
        //Obtener el modelo de la tabla para poder modificarlo
        DefaultTableModel modelo = (DefaultTableModel) dgvVendedores.getModel();
        //Limpiar registros anteriores
        modelo.setRowCount(0);
        for (Vendedor registro : registros) {
           //Creo una fila extrayendo los campos del objeto cliente almacenado en la lista de registros.
           modelo.addRow(new Object[]{
            registro.getCuit(),
            registro.getNombre(),
            registro.getApellido(),
            registro.getDni(),
            registro.getTelefono(),
            registro.getEmail(),
            registro.getSucursal()
            }); 
        }
    }
    public void listarTodosProveedores(){
        persona.Proveedor proveedor = new Proveedor();
        //Creo una lista de objetos cliente y guardo en ella lo retornado por getAll()
        List<Proveedor> registros = proveedor.getAll();
        // Verifica que la lista no esté vacía o nula
        if (registros == null || registros.isEmpty()) {
        System.out.println("Advertencia: No hay registros existentes en la base de datos.");
        return;
        }
        //Obtener el modelo de la tabla para poder modificarlo
        DefaultTableModel modelo = (DefaultTableModel) dgvProveedores.getModel();
        //Limpiar registros anteriores
        modelo.setRowCount(0);
        for (Proveedor registro : registros) {
           //Creo una fila extrayendo los campos del objeto cliente almacenado en la lista de registros.
           modelo.addRow(new Object[]{
            registro.getCuit(),
            registro.getNombreFantasia(),
            registro.getNombre(),
            registro.getApellido(),
            registro.getDni(),
            registro.getTelefono(),
            registro.getEmail()
        }); 
        }
    }
    public void listarFiltrosProveedores(){
        //Guardo los valores de los campos de texto para filtrar
        String dni = txtDniProv.getText();
        String nombre = txtNombreProv.getText();
        String apellido = txtApellidoProv.getText();
        persona.Proveedor proveedor = new Proveedor();
        //Creo una lista de objetos cliente y guardo en ella lo retornado por getAll()
        List<Proveedor> registros = proveedor.buscarPorFiltros(dni, nombre, apellido);
        // Verifica que la lista no esté vacía o nula
        if (registros == null || registros.isEmpty()) {
        System.out.println("Advertencia: No hay registros existentes en la base de datos que coincidan con los filtros.");
        return;
        }
        //Obtener el modelo de la tabla para poder modificarlo
        DefaultTableModel modelo = (DefaultTableModel) dgvProveedores.getModel();
        //Limpiar registros anteriores
        modelo.setRowCount(0);
        for (Proveedor registro : registros) {
           //Creo una fila extrayendo los campos del objeto cliente almacenado en la lista de registros.
           modelo.addRow(new Object[]{
            registro.getCuit(),
            registro.getNombreFantasia(),
            registro.getNombre(),
            registro.getApellido(),
            registro.getDni(),
            registro.getTelefono(),
            registro.getEmail()
        }); 
        }
    }
    
    /************
    ***ELIMINAR**
    ************/
    public void eliminarCliente(){
    //Obtener la fila seleccionada
        int fila = dgvClientes.getSelectedRow();
        //Indice de filas en Jtable arranca desde 0, asi aseguro que haya al menos una seleccionada
        if(fila >= 0){
             // Mostrar el mensaje de confirmación
            int respuesta = JOptionPane.showConfirmDialog(
            this,
            "¿Estás seguro de que deseas eliminar al usuario " + Integer.valueOf(dgvClientes.getValueAt(fila, 3).toString()) + 
            "?","Confirmar Eliminación", 
            JOptionPane.YES_NO_OPTION, 
            JOptionPane.WARNING_MESSAGE);
            //Interpreto la elección
            if (respuesta == JOptionPane.YES_OPTION) {
                Cliente cliente = new Cliente();
                //Guardo el dni en el atributo de mi objeto. Se usa en la funcion de eliminarCliente()
                cliente.setDni(Integer.parseInt(dgvClientes.getValueAt(fila, 3).toString()));              
                boolean bandera = cliente.eliminarCliente();
                if (bandera) {
                    JOptionPane.showMessageDialog(this, "Se ha eliminado el cliente de forma exitosa.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                    //Colocar metodo para refrescar grilla
                }
                else{
                    JOptionPane.showMessageDialog(this, "Se ha producido un error al borrar el usuario", "Error", JOptionPane.ERROR_MESSAGE);
                } 
            }
        }
    }
    public void eliminarVendedor(){
        //Obtener la fila seleccionada
        int fila = dgvVendedores.getSelectedRow();
        System.out.println(fila);
        //Indice de filas en Jtable arranca desde 0, asi aseguro que haya al menos una seleccionada
        if(fila >= 0){
             // Mostrar el mensaje de confirmación
            int respuesta = JOptionPane.showConfirmDialog(
            this,
            "¿Estás seguro de que deseas eliminar al usuario " + Integer.valueOf(dgvVendedores.getValueAt(fila, 3).toString()) + 
            "?","Confirmar Eliminación", 
            JOptionPane.YES_NO_OPTION, 
            JOptionPane.WARNING_MESSAGE);
            //Interpreto la elección
            if (respuesta == JOptionPane.YES_OPTION) {
                Vendedor vendedor = new Vendedor();
                //Guardo el dni en el atributo de mi objeto. Se usa en la funcion de eliminarCliente()
                vendedor.setDni(Integer.parseInt(dgvVendedores.getValueAt(fila, 3).toString()));              
                boolean bandera = vendedor.eliminarVendedor();
                if (bandera) {
                    JOptionPane.showMessageDialog(this, "Se ha eliminado el vendedor de forma exitosa.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                    //Colocar metodo para refrescar grilla
                }
                else{
                    JOptionPane.showMessageDialog(this, "Se ha producido un error al borrar el usuario", "Error", JOptionPane.ERROR_MESSAGE);
                } 
            }
        }
    }
    public void eliminarProveedor(){
        //Obtener la fila seleccionada
        int fila = dgvProveedores.getSelectedRow();
        //Indice de filas en Jtable arranca desde 0, asi aseguro que haya al menos una seleccionada
        if(fila >= 0){
             // Mostrar el mensaje de confirmación
            int respuesta = JOptionPane.showConfirmDialog(
            this,
            "¿Estás seguro de que deseas eliminar al proveedor " + Integer.valueOf(dgvProveedores.getValueAt(fila, 4).toString()) + 
            "?","Confirmar Eliminación", 
            JOptionPane.YES_NO_OPTION, 
            JOptionPane.WARNING_MESSAGE);
            //Interpreto la elección
            if (respuesta == JOptionPane.YES_OPTION) {
                Proveedor proveedor = new Proveedor();
                //Guardo el dni en el atributo de mi objeto. Se usa en la funcion de eliminarCliente()
                proveedor.setDni(Integer.parseInt(dgvProveedores.getValueAt(fila, 4).toString()));              
                boolean bandera = proveedor.eliminarProveedor();
                if (bandera) {
                    JOptionPane.showMessageDialog(this, "Se ha eliminado el proveedor de forma exitosa.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                    //Colocar metodo para refrescar grilla
                }
                else{
                    JOptionPane.showMessageDialog(this, "Se ha producido un error al borrar el proveedor", "Error", JOptionPane.ERROR_MESSAGE);
                } 
            }
        }
    }
    
    /************
    **MODIFICAR**
    ************/
    public void modificarCliente(){
        //Obtengo el indice de la fila
        int fila = dgvClientes.getSelectedRow();
        //Indice de filas en Jtable arranca desde 0, asi aseguro que haya al menos una seleccionada
        if(fila >= 0){
            //Obtengo los valores de la tabla
            String cuil = dgvClientes.getValueAt(fila, 0).toString();
            String nombre = dgvClientes.getValueAt(fila, 1).toString();
            String apellido = dgvClientes.getValueAt(fila, 2).toString();
            int dni = Integer.parseInt(dgvClientes.getValueAt(fila, 3).toString());
            String telefono = dgvClientes.getValueAt(fila, 4).toString();
            String email = dgvClientes.getValueAt(fila, 5).toString();
            //Instancio la interfáz con el constructor personalizado de la clase de la interfaz de modificar
            ModificarCliente frmModificarCliente = new ModificarCliente(cuil, nombre, apellido, dni, telefono, email);
            frmModificarCliente.setLocationRelativeTo(null);
            frmModificarCliente.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
            frmModificarCliente.show();
        }
        else{
            System.out.println("Seleccione una fila antes de intentar modificar");
        }
    }
    public void modificarVendedor(){
        //Obtengo el indice de la fila
        int fila = dgvVendedores.getSelectedRow();
        //Indice de filas en Jtable arranca desde 0, asi aseguro que haya al menos una seleccionada
        if(fila >= 0){
            //Obtengo los valores de la tabla
            String cuit = dgvVendedores.getValueAt(fila, 0).toString();
            String nombre = dgvVendedores.getValueAt(fila, 1).toString();
            String apellido = dgvVendedores.getValueAt(fila, 2).toString();
            int dni = Integer.parseInt(dgvVendedores.getValueAt(fila, 3).toString());
            String telefono = dgvVendedores.getValueAt(fila, 4).toString();
            String email = dgvVendedores.getValueAt(fila, 5).toString();
            String sucursal = dgvVendedores.getValueAt(fila, 6).toString();
            //Instancio la interfáz con el constructor personalizado de la clase de la interfaz de modificar
            ModificarVendedor frmModificarVendedor = new ModificarVendedor(cuit, sucursal, nombre, apellido, dni, telefono, email);
            frmModificarVendedor.setLocationRelativeTo(null);
            frmModificarVendedor.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
            frmModificarVendedor.show();
        }
        else{
            System.out.println("Seleccione una fila antes de intentar modificar");
        }
    }
    public void modificarProveedor(){
        //Obtengo el indice de la fila
        int fila = dgvProveedores.getSelectedRow();
        //Indice de filas en Jtable arranca desde 0, asi aseguro que haya al menos una seleccionada
        if(fila >= 0){
            //Obtengo los valores de la tabla
            String cuit = dgvProveedores.getValueAt(fila, 0).toString();
            String nombreFantasia = dgvProveedores.getValueAt(fila, 1).toString();
            String nombre = dgvProveedores.getValueAt(fila, 2).toString();
            String apellido = dgvProveedores.getValueAt(fila, 3).toString();
            int dni = Integer.parseInt(dgvProveedores.getValueAt(fila, 4).toString());
            String telefono = dgvProveedores.getValueAt(fila, 5).toString();
            String email = dgvProveedores.getValueAt(fila, 6).toString();
            //Instancio la interfáz con el constructor personalizado de la clase de la interfaz de modificar
            ModificarProveedor frmModificarProveedor = new ModificarProveedor(cuit, nombreFantasia, nombre, apellido, dni, telefono, email);
            frmModificarProveedor.setLocationRelativeTo(null);
            frmModificarProveedor.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
            frmModificarProveedor.show();
        }
        else{
            System.out.println("Seleccione una fila antes de intentar modificar");
        }
    }
    
    
    
    
    /*************
    ****CLIENTE*** 
    **************/
    //Carga de lista completa inicial
    private void pnlClienteComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_pnlClienteComponentShown
        listarTodosClientes();
    }//GEN-LAST:event_pnlClienteComponentShown
    
    //Buscar por filtros y refrescar
    private void btnBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClienteActionPerformed
       listarFiltrosClientes();
    }//GEN-LAST:event_btnBuscarClienteActionPerformed
    
    //Crear nuevo cliente
    private void btnNuevoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoClienteActionPerformed
        AgregarCliente frmAgregarCliente = new AgregarCliente();
        frmAgregarCliente.setLocationRelativeTo(null);
        frmAgregarCliente.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        frmAgregarCliente.show();
    }//GEN-LAST:event_btnNuevoClienteActionPerformed
    
    //Eliminar cliente seleccionado de la grilla
    private void btnEliminarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarClienteActionPerformed
        eliminarCliente();
    }//GEN-LAST:event_btnEliminarClienteActionPerformed

    //Modificar cliente
    private void btnModificarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarClienteActionPerformed
        modificarCliente();
    }//GEN-LAST:event_btnModificarClienteActionPerformed

    /*************
    ***VENDEDOR*** 
    **************/
    //Carga de lista completa inicial seleccionado de la grilla
    private void pnlVendedoresComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_pnlVendedoresComponentShown
        listarTodosVendedores();
    }//GEN-LAST:event_pnlVendedoresComponentShown
    
    //Buscar vendedor por filtros
    private void btnBuscarVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarVendedorActionPerformed
        listarFiltrosVendedores();
    }//GEN-LAST:event_btnBuscarVendedorActionPerformed

    //Crear nuevo vendedor
    private void btnNuevoVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoVendedorActionPerformed
        AgregarVendedor frmAgregarVendedor = new AgregarVendedor();
        frmAgregarVendedor.setLocationRelativeTo(null);
        frmAgregarVendedor.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        frmAgregarVendedor.show();
    }//GEN-LAST:event_btnNuevoVendedorActionPerformed

    //Elimminar vendedor seleccionado de la grilla
    private void btnEliminarVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarVendedorActionPerformed
        eliminarVendedor();
    }//GEN-LAST:event_btnEliminarVendedorActionPerformed
    
    //Modificar vendedor seleccionado de la grilla
    private void btnModificarVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarVendedorActionPerformed
        modificarVendedor();
    }//GEN-LAST:event_btnModificarVendedorActionPerformed

    /**************
    ***PROVEEDOR***
    **************/
    //Eliminar proveedor
    private void btnEliminarProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarProveedorActionPerformed
        eliminarProveedor();
    }//GEN-LAST:event_btnEliminarProveedorActionPerformed

    //Modificar proveedor
    private void btnModificarProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarProveedorActionPerformed
        modificarProveedor();
    }//GEN-LAST:event_btnModificarProveedorActionPerformed
    
    //Crear nuevo vendedor
    private void btnNuevoProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoProveedorActionPerformed
        CrearProveedor frmCrearProveedor = new CrearProveedor();
        frmCrearProveedor.setLocationRelativeTo(null);
        frmCrearProveedor.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        frmCrearProveedor.show();
    }//GEN-LAST:event_btnNuevoProveedorActionPerformed

    //Buscar proveedor por filtro
    private void btnBuscarProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProveedorActionPerformed
        listarFiltrosProveedores();
    }//GEN-LAST:event_btnBuscarProveedorActionPerformed
    
    //Carga de lista completa inicial seleccionado de la grilla
    private void pnlProveedoresComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_pnlProveedoresComponentShown
        listarTodosProveedores();
    }//GEN-LAST:event_pnlProveedoresComponentShown

    /**************
    ***PRODUCTO****
    **************/
    private void btnBuscarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProductoActionPerformed
        String codigo = txtCodigo.getText().trim();
        String categoria = txtCategoria.getText().trim();
        String modelo = txtModelo.getText().trim();

        List<Producto> registros = Producto.buscarPorFiltros(codigo, categoria, modelo);

        if (registros == null || registros.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay productos que coincidan con los filtros.", "Sin resultados", JOptionPane.WARNING_MESSAGE);
            return;
        }

        DefaultTableModel modeloTabla = (DefaultTableModel) dgvProductos.getModel();

        modeloTabla.setRowCount(0);

        for (Producto registro : registros) {
            modeloTabla.addRow(new Object[]{
                registro.getCodigo(),
                registro.getNombre(),
                registro.getNombreCategoria(),
                registro.getNombreProveedor(),
                registro.getNombreModelo()
            });
        }
    }//GEN-LAST:event_btnBuscarProductoActionPerformed

    private void btnEliminarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarProductoActionPerformed
                                                 
        int fila = dgvProductos.getSelectedRow();
        if (fila >= 0) {
            int respuesta = JOptionPane.showConfirmDialog(
                this,
                "¿Estás seguro de que deseas eliminar el producto con código " + dgvProductos.getValueAt(fila, 0).toString() + "?",
                "Confirmar Eliminación",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE
            );

        if (respuesta == JOptionPane.YES_OPTION) {
            try {
                Producto producto = new Producto();
                String codigoProducto = dgvProductos.getValueAt(fila, 0).toString(); // Código del producto
                producto.setCodigo(codigoProducto);
                boolean eliminado = producto.eliminarProducto();

                if (eliminado) {
                    JOptionPane.showMessageDialog(
                        this,
                        "El producto se ha eliminado correctamente.",
                        "Éxito",
                        JOptionPane.INFORMATION_MESSAGE
                    );
                    pnlProductoComponentShown(null); // Refresca la grilla
                } else {
                    JOptionPane.showMessageDialog(
                        this,
                        "Hubo un error al intentar eliminar el producto.",
                        "Error",
                        JOptionPane.ERROR_MESSAGE
                    );
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(
                    this,
                    "Hubo un error procesando la solicitud: " + e.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE
                );
            }
        }
    } else {
        JOptionPane.showMessageDialog(
            this,
            "Por favor, selecciona un producto de la tabla.",
            "Advertencia",
            JOptionPane.WARNING_MESSAGE
        );
    }
    }//GEN-LAST:event_btnEliminarProductoActionPerformed

    private void btnModificarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarProductoActionPerformed
     int fila = dgvProductos.getSelectedRow();

    if (fila >= 0) {
        String codigo = dgvProductos.getValueAt(fila, 0).toString();
        String nombre = dgvProductos.getValueAt(fila, 1).toString();
        String proveedor = dgvProductos.getValueAt(fila, 2).toString();
        String categoria = dgvProductos.getValueAt(fila, 3).toString();
        String modelo = dgvProductos.getValueAt(fila, 4).toString();

        ModificarProducto modificarProducto = new ModificarProducto(codigo, nombre, proveedor, categoria, modelo);
        modificarProducto.setLocationRelativeTo(null);
        modificarProducto.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        modificarProducto.setVisible(true);
    } else {
        JOptionPane.showMessageDialog(this, "Por favor, selecciona un producto para modificar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_btnModificarProductoActionPerformed

    private void btnNuevoProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoProductoActionPerformed
       AgregarProducto frmAgregarProducto = new AgregarProducto();
       frmAgregarProducto.setLocationRelativeTo(null);
       frmAgregarProducto.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
       frmAgregarProducto.setVisible(true);

    }//GEN-LAST:event_btnNuevoProductoActionPerformed

    private void pnlProductoComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_pnlProductoComponentShown
        producto.Producto producto = new Producto();
        
        List<Producto> registros = producto.getAll();
        
        if (registros == null || registros.isEmpty()) {
        System.out.println("Advertencia: No hay productos existentes en la base de datos.");
        return;
        }
        
        DefaultTableModel modelo = (DefaultTableModel) dgvProductos.getModel();
        modelo.setRowCount(0);
        
        for (Producto registro : registros) {
            modelo.addRow(new Object[]{
            registro.getCodigo(),
            registro.getNombre(),
            registro.getNombreProveedor(),
            registro.getNombreCategoria(),
            registro.getNombreModelo()
                    
        });
        }
    }//GEN-LAST:event_pnlProductoComponentShown

    
    /**************
    ****PEDIDOS****
    **************/
    private void pnlVentasComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_pnlVentasComponentShown
        List<Pedido> pedidos = Pedido.getPedidosParaGrilla();
        DefaultTableModel model = (DefaultTableModel) dgvVentas.getModel();
        model.setRowCount(0); // Limpia la tabla
        for (Pedido pedido : pedidos) {
            model.addRow(new Object[]{
                pedido.getId(),
                pedido.getFecha(),
                pedido.getVendedor().getNombre(),
                pedido.getCliente().getNombre(),
                pedido.getTotal()
            });
        }
    }//GEN-LAST:event_pnlVentasComponentShown

    private void dgvVentasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dgvVentasMouseClicked
         // Obtener el índice de la fila donde se hizo clic
        int fila = dgvVentas.rowAtPoint(evt.getPoint());

        if (fila >= 0) { // Verificar que se hizo clic sobre una fila válida
            // Obtener los valores de las columnas
            Object id = dgvVentas.getValueAt(fila, 0); // Columna 0: ID
            //consulta

            

          
        }
    }//GEN-LAST:event_dgvVentasMouseClicked

    private void btnGenerarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarVentaActionPerformed
        CrearVenta frmAgregarVenta = new CrearVenta();
        frmAgregarVenta.setLocationRelativeTo(null);
        frmAgregarVenta.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        frmAgregarVenta.show();
        frmAgregarVenta.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent e) {
                pnlVentasComponentShown(null);
            }
        });
    }//GEN-LAST:event_btnGenerarVentaActionPerformed
    
   
   
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarCliente;
    private javax.swing.JButton btnBuscarProducto;
    private javax.swing.JButton btnBuscarProveedor;
    private javax.swing.JButton btnBuscarVendedor;
    private javax.swing.JButton btnBuscarVentas;
    private javax.swing.JButton btnEliminarCliente;
    private javax.swing.JButton btnEliminarProducto;
    private javax.swing.JButton btnEliminarProveedor;
    private javax.swing.JButton btnEliminarVendedor;
    private javax.swing.JButton btnGenerarVenta;
    private javax.swing.JButton btnModificarCliente;
    private javax.swing.JButton btnModificarProducto;
    private javax.swing.JButton btnModificarProveedor;
    private javax.swing.JButton btnModificarVendedor;
    private javax.swing.JButton btnNuevoCliente;
    private javax.swing.JButton btnNuevoProducto;
    private javax.swing.JButton btnNuevoProveedor;
    private javax.swing.JButton btnNuevoVendedor;
    private javax.swing.JTable dgvClientes;
    private javax.swing.JTable dgvDetalle;
    private javax.swing.JTable dgvProductos;
    private javax.swing.JTable dgvProveedores;
    private javax.swing.JTable dgvVendedores;
    private javax.swing.JTable dgvVentas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JPanel pnlCliente;
    private javax.swing.JTabbedPane pnlPantalla;
    private javax.swing.JPanel pnlProducto;
    private javax.swing.JPanel pnlProveedores;
    private javax.swing.JPanel pnlVendedores;
    private javax.swing.JPanel pnlVentas;
    private javax.swing.JTextField txtApellidoCli;
    private javax.swing.JTextField txtApellidoClient;
    private javax.swing.JTextField txtApellidoProv;
    private javax.swing.JTextField txtApellidoVen;
    private javax.swing.JTextField txtApellidoVend;
    private javax.swing.JTextField txtCategoria;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDniCli;
    private javax.swing.JTextField txtDniProv;
    private javax.swing.JTextField txtDniVen;
    private javax.swing.JTextField txtFechaDesde;
    private javax.swing.JTextField txtFechaHasta;
    private javax.swing.JTextField txtMasVendido;
    private javax.swing.JTextField txtModelo;
    private javax.swing.JTextField txtNombreCli;
    private javax.swing.JTextField txtNombreClient;
    private javax.swing.JTextField txtNombreProv;
    private javax.swing.JTextField txtNombreVen;
    private javax.swing.JTextField txtNombreVend;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
