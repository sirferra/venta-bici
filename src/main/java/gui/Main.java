/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import java.util.List;
import javax.swing.table.DefaultTableModel;

import com.formdev.flatlaf.FlatDarculaLaf;
import gui.cliente.AgregarCliente;
import gui.cliente.ModificarCliente;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;

import persona.Cliente;
import persona.Vendedor;
import gui.vendedor.AgregarVendedor;

/**
 *
 * @author facundo.cuffia
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        
    }

    //Metodo de rellenar tabla (insertar una vez listo el programa)
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlProveedores = new javax.swing.JTabbedPane();
        pnlCliente = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dgvClientes = new javax.swing.JTable();
        btnNuevoCliente = new javax.swing.JButton();
        btnModificarCliente = new javax.swing.JButton();
        btnEliminarCliente = new javax.swing.JButton();
        txtNombreCli = new javax.swing.JTextField();
        txtApellidoCli = new javax.swing.JTextField();
        txtDniCli = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnBuscarCliente = new javax.swing.JButton();
        pnlVendedores = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        dgvVendedores = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtNombreVen = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtApellidoVen = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtDniVen = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnEliminarVendedor = new javax.swing.JButton();
        btnModificarVendedor = new javax.swing.JButton();
        btnNuevoVendedor = new javax.swing.JButton();
        btnBuscarVendedor = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        dgvProveedores = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        pnlCliente.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                pnlClienteComponentShown(evt);
            }
        });

        dgvClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "CUIL", "NOMBRE", "APELLIDO", "DNI", "TELEFONO", "EMAIL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(dgvClientes);
        if (dgvClientes.getColumnModel().getColumnCount() > 0) {
            dgvClientes.getColumnModel().getColumn(0).setResizable(false);
            dgvClientes.getColumnModel().getColumn(1).setResizable(false);
            dgvClientes.getColumnModel().getColumn(2).setResizable(false);
        }

        btnNuevoCliente.setText("Nuevo Cliente");
        btnNuevoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoClienteActionPerformed(evt);
            }
        });

        btnModificarCliente.setText("Modificar Cliente");
        btnModificarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarClienteActionPerformed(evt);
            }
        });

        btnEliminarCliente.setText("Eliminar Cliente");
        btnEliminarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarClienteActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre:");

        jLabel2.setText("Apellido:");

        jLabel3.setText("DNI:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("FILTROS");

        btnBuscarCliente.setText("Buscar Clientes");
        btnBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlClienteLayout = new javax.swing.GroupLayout(pnlCliente);
        pnlCliente.setLayout(pnlClienteLayout);
        pnlClienteLayout.setHorizontalGroup(
            pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClienteLayout.createSequentialGroup()
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlClienteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(pnlClienteLayout.createSequentialGroup()
                        .addGap(0, 6, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 253, Short.MAX_VALUE)
                        .addComponent(btnEliminarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNuevoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlClienteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlClienteLayout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtDniCli, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlClienteLayout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtApellidoCli, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnlClienteLayout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtNombreCli, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlClienteLayout.setVerticalGroup(
            pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClienteLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModificarCliente)
                    .addComponent(btnNuevoCliente)
                    .addComponent(btnEliminarCliente)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombreCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtApellidoCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(12, 12, 12)
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDniCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBuscarCliente)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        pnlProveedores.addTab("Clientes", pnlCliente);

        pnlVendedores.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                pnlVendedoresComponentShown(evt);
            }
        });

        dgvVendedores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "CUIT", "NOMBRE", "APELLIDO", "DNI", "TELEFONO", "EMAIL", "SUCURSAL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dgvVendedores.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(dgvVendedores);
        if (dgvVendedores.getColumnModel().getColumnCount() > 0) {
            dgvVendedores.getColumnModel().getColumn(1).setResizable(false);
            dgvVendedores.getColumnModel().getColumn(2).setResizable(false);
            dgvVendedores.getColumnModel().getColumn(6).setResizable(false);
        }

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("FILTROS");

        jLabel6.setText("Nombre:");

        jLabel7.setText("Apellido:");

        jLabel8.setText("DNI:");

        btnEliminarVendedor.setText("Eliminar Vendedor");

        btnModificarVendedor.setText("Modificar Vendedor");

        btnNuevoVendedor.setText("Nuevo Vendedor");
        btnNuevoVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoVendedorActionPerformed(evt);
            }
        });

        btnBuscarVendedor.setText("Buscar Vendedores");
        btnBuscarVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarVendedorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlVendedoresLayout = new javax.swing.GroupLayout(pnlVendedores);
        pnlVendedores.setLayout(pnlVendedoresLayout);
        pnlVendedoresLayout.setHorizontalGroup(
            pnlVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVendedoresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 709, Short.MAX_VALUE)
                    .addGroup(pnlVendedoresLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminarVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificarVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNuevoVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlVendedoresLayout.createSequentialGroup()
                        .addGroup(pnlVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(pnlVendedoresLayout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtDniVen, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnlVendedoresLayout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtApellidoVen, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnlVendedoresLayout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtNombreVen, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnBuscarVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlVendedoresLayout.setVerticalGroup(
            pnlVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVendedoresLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(btnModificarVendedor)
                    .addComponent(btnNuevoVendedor)
                    .addComponent(btnEliminarVendedor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombreVen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtApellidoVen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDniVen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBuscarVendedor)
                .addGap(0, 57, Short.MAX_VALUE))
        );

        pnlProveedores.addTab("Vendedores", pnlVendedores);

        dgvProveedores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "N. FANTASIA", "NOMBRE", "APELLIDO", "DNI", "CUIT", "TELEFONO", "EMAIL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(dgvProveedores);
        if (dgvProveedores.getColumnModel().getColumnCount() > 0) {
            dgvProveedores.getColumnModel().getColumn(0).setResizable(false);
            dgvProveedores.getColumnModel().getColumn(2).setResizable(false);
            dgvProveedores.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 709, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 229, Short.MAX_VALUE))
        );

        pnlProveedores.addTab("Proveedores", jPanel3);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 721, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 574, Short.MAX_VALUE)
        );

        pnlProveedores.addTab("Productos", jPanel4);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 721, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 574, Short.MAX_VALUE)
        );

        pnlProveedores.addTab("Ventas", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlProveedores)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlProveedores, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*************
    ****CLIENTE*** 
    **************/
    //Carga de lista completa inicial
    private void pnlClienteComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_pnlClienteComponentShown
        persona.Cliente cliente = new Cliente();
        //Creo una lista de objetos cliente y guardo en ella lo retornado por getAll()
        List<Cliente> registros = cliente.getAll();
        // Verifica que la lista no esté vacía o nula
        if (registros == null || registros.isEmpty()) {
        System.out.println("Advertencia: No hay registros existentes en la base de datos.");
        return;
        }
        //Obtener el modelo de la tabla para poder modificarlo
        DefaultTableModel modelo = (DefaultTableModel) dgvClientes.getModel();
        //Limpiar registros anteriores
        modelo.setRowCount(0);
        for (Cliente registro : registros) {
           //Creo una fila extrayendo los campos del objeto cliente almacenado en la lista de registros.
           modelo.addRow(new Object[]{
            registro.getCuil(),
            registro.getNombre(),
            registro.getApellido(),
            registro.getDni(),
            registro.getTelefono(),
            registro.getEmail()
        }); 
        }
    }//GEN-LAST:event_pnlClienteComponentShown
    
    //Buscar por filtros y refrescar
    private void btnBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClienteActionPerformed
        //Guardo los valores de los campos de texto para filtrar
        String dni = txtDniCli.getText();
        String nombre = txtNombreCli.getText();
        String apellido = txtApellidoCli.getText();
        persona.Cliente cliente = new Cliente();
        //Creo una lista de objetos cliente y guardo en ella lo retornado por getAll()
        List<Cliente> registros = cliente.buscarPorFiltros(dni, nombre, apellido);
        // Verifica que la lista no esté vacía o nula
        if (registros == null || registros.isEmpty()) {
        System.out.println("Advertencia: No hay registros existentes en la base de datos que coincidan con los filtros.");
        return;
        }
        //Obtener el modelo de la tabla para poder modificarlo
        DefaultTableModel modelo = (DefaultTableModel) dgvClientes.getModel();
        //Limpiar registros anteriores
        modelo.setRowCount(0);
        for (Cliente registro : registros) {
           //Creo una fila extrayendo los campos del objeto cliente almacenado en la lista de registros.
           modelo.addRow(new Object[]{
            registro.getCuil(),
            registro.getNombre(),
            registro.getApellido(),
            registro.getDni(),
            registro.getTelefono(),
            registro.getEmail()
        }); 
        }
    }//GEN-LAST:event_btnBuscarClienteActionPerformed
    
    //Crear nuevo cliente
    private void btnNuevoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoClienteActionPerformed
        AgregarCliente frmAgregarCliente = new AgregarCliente();
        frmAgregarCliente.setLocationRelativeTo(null);
        frmAgregarCliente.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        frmAgregarCliente.show();
    }//GEN-LAST:event_btnNuevoClienteActionPerformed
    
    //Eliminar cliente seleccionado de la grilla
    private void btnEliminarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarClienteActionPerformed
        //Obtener la fila seleccionada
        int fila = dgvClientes.getSelectedRow();
        //Indice de filas en Jtable arranca desde 0, asi aseguro que haya al menos una seleccionada
        if(fila >= 0){
             // Mostrar el mensaje de confirmación
            int respuesta = JOptionPane.showConfirmDialog(
            this,
            "¿Estás seguro de que deseas eliminar al usuario " + Integer.valueOf(dgvClientes.getValueAt(fila, 3).toString()) + 
            "?","Confirmar Eliminación", 
            JOptionPane.YES_NO_OPTION, 
            JOptionPane.WARNING_MESSAGE);
            //Interpreto la elección
            if (respuesta == JOptionPane.YES_OPTION) {
                Cliente cliente = new Cliente();
                //Guardo el dni en el atributo de mi objeto. Se usa en la funcion de eliminarCliente()
                cliente.setDni(Integer.parseInt(dgvClientes.getValueAt(fila, 3).toString()));              
                boolean bandera = cliente.eliminarCliente();
                if (bandera) {
                    JOptionPane.showMessageDialog(this, "Se ha eliminado el cliente de forma exitosa.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                    cliente.getAll();
                }
                else{
                    JOptionPane.showMessageDialog(this, "Se ha producido un error al borrar el usuario", "Error", JOptionPane.ERROR_MESSAGE);
                } 
            }
        }
    }//GEN-LAST:event_btnEliminarClienteActionPerformed

    //Modificar cliente
    private void btnModificarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarClienteActionPerformed
        //Obtengo el indice de la fila
        int fila = dgvClientes.getSelectedRow();
        //Indice de filas en Jtable arranca desde 0, asi aseguro que haya al menos una seleccionada
        if(fila >= 0){
            //Obtengo los valores de la tabla
            String cuil = dgvClientes.getValueAt(fila, 0).toString();
            String nombre = dgvClientes.getValueAt(fila, 1).toString();
            String apellido = dgvClientes.getValueAt(fila, 2).toString();
            int dni = Integer.parseInt(dgvClientes.getValueAt(fila, 3).toString());
            String telefono = dgvClientes.getValueAt(fila, 4).toString();
            String email = dgvClientes.getValueAt(fila, 5).toString();
            //Instancio la interfáz con el constructor personalizado de la clase de la interfaz de modificar
            ModificarCliente frmModificarCliente = new ModificarCliente(cuil, nombre, apellido, dni, telefono, email);
            frmModificarCliente.setLocationRelativeTo(null);
            frmModificarCliente.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
            frmModificarCliente.show();
        }
        else{
            System.out.println("Seleccione una fila antes de intentar modificar");
        }
    }//GEN-LAST:event_btnModificarClienteActionPerformed

    /*************
    ***VENDEDOR*** 
    **************/
    //Carga de lista completa inicial seleccionado de la grilla
    private void pnlVendedoresComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_pnlVendedoresComponentShown
        Vendedor vendedor = new Vendedor();
        //Creo una lista de objetos cliente y guardo en ella lo retornado por getAll()
        List<Vendedor> registros = vendedor.getAll();
        // Verifica que la lista no esté vacía o nula
        if (registros == null || registros.isEmpty()) {
        System.out.println("Advertencia: No hay registros existentes en la base de datos.");
        return;
        }
        //Obtener el modelo de la tabla para poder modificarlo
        DefaultTableModel modelo = (DefaultTableModel) dgvVendedores.getModel();
        //Limpiar registros anteriores
        modelo.setRowCount(0);
        for (Vendedor registro : registros) {
           //Creo una fila extrayendo los campos del objeto cliente almacenado en la lista de registros.
           modelo.addRow(new Object[]{
            registro.getCuit(),
            registro.getNombre(),
            registro.getApellido(),
            registro.getDni(),
            registro.getTelefono(),
            registro.getEmail(),
            registro.getSucursal()
        }); 
        }
    }//GEN-LAST:event_pnlVendedoresComponentShown

    private void btnBuscarVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarVendedorActionPerformed
        //Guardo los valores de los campos de texto para filtrar
        String dni = txtDniVen.getText();
        String nombre = txtNombreVen.getText();
        String apellido = txtApellidoVen.getText();
        Vendedor vendedor = new Vendedor();
        //Creo una lista de objetos cliente y guardo en ella lo retornado por getAll()
        List<Vendedor> registros = Vendedor.buscarPorFiltros(dni, nombre, apellido);
        // Verifica que la lista no esté vacía o nula
        if (registros == null || registros.isEmpty()) {
        System.out.println("Advertencia: No hay registros existentes en la base de datos que coincidan con los filtros.");
        return;
        }
        //Obtener el modelo de la tabla para poder modificarlo
        DefaultTableModel modelo = (DefaultTableModel) dgvVendedores.getModel();
        //Limpiar registros anteriores
        modelo.setRowCount(0);
        for (Vendedor registro : registros) {
           //Creo una fila extrayendo los campos del objeto cliente almacenado en la lista de registros.
           modelo.addRow(new Object[]{
            registro.getCuit(),
            registro.getNombre(),
            registro.getApellido(),
            registro.getDni(),
            registro.getTelefono(),
            registro.getEmail(),
            registro.getSucursal()
            }); 
        }
    }//GEN-LAST:event_btnBuscarVendedorActionPerformed

    private void btnNuevoVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoVendedorActionPerformed
        AgregarVendedor frmAgregarVendedor = new AgregarVendedor();
        frmAgregarVendedor.setLocationRelativeTo(null);
        frmAgregarVendedor.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        frmAgregarVendedor.show();
    }//GEN-LAST:event_btnNuevoVendedorActionPerformed
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarCliente;
    private javax.swing.JButton btnBuscarVendedor;
    private javax.swing.JButton btnEliminarCliente;
    private javax.swing.JButton btnEliminarVendedor;
    private javax.swing.JButton btnModificarCliente;
    private javax.swing.JButton btnModificarVendedor;
    private javax.swing.JButton btnNuevoCliente;
    private javax.swing.JButton btnNuevoVendedor;
    private javax.swing.JTable dgvClientes;
    private javax.swing.JTable dgvProveedores;
    private javax.swing.JTable dgvVendedores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel pnlCliente;
    private javax.swing.JTabbedPane pnlProveedores;
    private javax.swing.JPanel pnlVendedores;
    private javax.swing.JTextField txtApellidoCli;
    private javax.swing.JTextField txtApellidoVen;
    private javax.swing.JTextField txtDniCli;
    private javax.swing.JTextField txtDniVen;
    private javax.swing.JTextField txtNombreCli;
    private javax.swing.JTextField txtNombreVen;
    // End of variables declaration//GEN-END:variables
}
